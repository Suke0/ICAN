import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--desc', type=str)
parser.add_argument('--dataset', type=str)
parser.add_argument('--train_path', type=str, default='../data/train')
parser.add_argument('--test_path', type=str, default='../data/test')
parser.add_argument('--log_dir', type=str, default='../log/')
parser.add_argument('--chpt_dir', type=str, default='../save/chpt/')
parser.add_argument('--para_path', type=str, default='../save/model/para')
parser.add_argument('--emb_path', type=str, default='../save/model/part-00000')
parser.add_argument('--data_dir', type=str, default='../data/')
parser.add_argument('--submission_dir', type=str, default='../submission/')
parser.add_argument('--submit', action='store_true')
parser.add_argument('--analysis', action='store_true')
parser.add_argument('--seed', type=int, default=42)
parser.add_argument('--n_iter', type=int, default=1)
parser.add_argument('--n_batch', type=int, default=16)
parser.add_argument('--max_seq_len', type=int, default=50)
parser.add_argument('--max_grad_norm', type=int, default=1)
parser.add_argument('--lr', type=float, default=0.001)
parser.add_argument('--lr_warmup', type=float, default=0.002)
parser.add_argument('--n_ctx', type=int, default=50)
parser.add_argument('--n_embd', type=int, default=64)
parser.add_argument('--n_head', type=int, default=4)
parser.add_argument('--n_layer', type=int, default=2)
parser.add_argument('--embd_pdrop', type=float, default=0.1)
parser.add_argument('--attn_pdrop', type=float, default=0.1)
parser.add_argument('--resid_pdrop', type=float, default=0.1)
parser.add_argument('--clf_pdrop', type=float, default=0.1)
parser.add_argument('--l2', type=float, default=0.01)
parser.add_argument('--vector_l2', action='store_true')
parser.add_argument('--n_gpu', type=int, default=4)
parser.add_argument('--opt', type=str, default='adam')
parser.add_argument('--afn', type=str, default='gelu')
parser.add_argument('--lr_schedule', type=str, default='warmup_cosine')
parser.add_argument('--vocab_path', type=str, default='../data/vocab')
parser.add_argument('--split_str', type=str, default=' ')
parser.add_argument('--n_transfer', type=int, default=12)
parser.add_argument('--lm_coef', type=float, default=0.5)
parser.add_argument('--b1', type=float, default=0.9)
parser.add_argument('--b2', type=float, default=0.999)
parser.add_argument('--e', type=float, default=1e-8)


parser.add_argument('--batch_size', type=int, default=1024)
parser.add_argument('--num_epochs', type=int, default=1)
parser.add_argument('--num_checkpoints', type=int, default=5)
parser.add_argument('--checkpoint_every', type=int, default=100000)
parser.add_argument('--history_aggregate_mode', type=int, default=0)
parser.add_argument('--mode', type=str, default="train")
parser.add_argument('--model_save_path', type=str, default="model_save_path")
parser.add_argument('--allow_soft_placement', type=bool, default=True)
parser.add_argument('--log_device_placement', type=bool, default=False)
parser.add_argument('--use_residual', type=bool, default=False)
parser.add_argument('--use_position', type=bool, default=False)
parser.add_argument('--use_group_attention', type=bool, default=False)
parser.add_argument('--training_file_path', type=str, default="train.data")
parser.add_argument('--dev_file_path', type=str, default=None)
parser.add_argument('--embedding_file_path', type=str, default="embedding.file")
parser.add_argument('--input_date', type=str, default="20180405")
parser.add_argument('--need_dev', type=bool, default=False)
parser.add_argument('--trainable', type=bool, default=False)
parser.add_argument('--log_path', type=str, default="None")
parser.add_argument('--doc_file', type=str, default="doc file")
parser.add_argument('--user_file', type=str, default="user file")
parser.add_argument('--feature_dict', type=str, default="feature dict file")
parser.add_argument('--user_activation', type=str, default="user_activation")
parser.add_argument('--doc_activation', type=str, default="doc_activation")
parser.add_argument('--doc_info', type=str, default="doc_info.txt")
parser.add_argument('--use_fm', type=str, default="0")
FLAGS = parser.parse_args()
